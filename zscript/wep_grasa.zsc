/**
== GRASA M-12 SUBMACHINE GUN ==
- Loadout Code: grs
  - Magazines: grm
- Ammo Type: .45 ACP
- Modifiers: modtype (0 = standard, 1 = hacked RoF, 2 = durable bolt)

I'm going to be straight-up with you: this is not a military gun. This thing is 
a half-developed piece of junk thugs pack because they can't find anything 
cheaper. Sure, slinging .45 ACP at those kinds of speeds is gonna tear through 
shields and do a pretty good number on anything behind them, but between the 
mags and the weapon itself, you're going to find more interesting ways for this 
thing to break down on you than teeth on a Babuin. To be fair, that's not to say
it's completely unusable, and the smaller form factor means you can carry one in
each hand with very little issue in case one jams on you, but relying too much 
on this thing's going to get you in a world of trouble.
**/

const ENC_45ACP_LOADED = 0.55; // should migrate this over to the new 45 var at some point -UQGM
const ENC_45MAG30_EMPTY = ENC_9MAG30_EMPTY * 1.2;
const ENC_45MAG30_LOADED = ENC_45MAG30_EMPTY * 0.1;


class HD45ACPMag30:HDMagAmmo{
	default{
		//$Category "Ammo/Operation: Dead Ringer"
		//$Title "Grasa M-12 Magazine"
		//$Sprite "CLP3A0"
		hdmagammo.roundtype "HD45ACPAmmo";
		hdmagammo.maxperunit 30;
		hdmagammo.roundbulk ENC_45ACP_LOADED;
		hdmagammo.magbulk ENC_45MAG30_EMPTY;
		tag ".45 ACP Grasa magazine";
		inventory.pickupmessage "$PICKUP_GRASACLIP";
		hdpickup.refid "grm";
		xscale 0.9;
		yscale 1.1;
	}
	
	override string pickupmessage() {
		return StringTable.Localize(super.pickupmessage());
	}
	
	override string,string,name,double getmagsprite(int thismagamt){
		string magsprite=(thismagamt>0)?"CLP3A0":"CLP3B0";
		return magsprite,"PBRSA0","HD45ACPAmmo",2.;
	}
	override void GetItemsThatUseThis(){
		itemsthatusethis.push("HDGrasa");
	}
	
	states{
	spawn:
		CLP3 A -1;
		stop;
	spawnempty:
		CLP3 B -1{
			brollsprite=true;brollcenter=true;
			roll=randompick(0,0,0,0,2,2,2,2,1,3)*90;
		}stop;
	}
}

class HDGrasa : HDWeapon {
	bool wronghand;
	default {
		//$Category "Weapons/Operation: Dead Ringer"
		//$Title "Grasa M-12"
		//$Sprite "GRSPA0"
		+HDWeapon.FitsInBackpack
		weapon.selectionorder 43;
		weapon.slotnumber 4;
		weapon.slotpriority 3;
		inventory.pickupmessage "$PICKUP_GRASA";
		obituary "$OBIT_GRASA";
		weapon.kickback 30;
		weapon.bobrangex 0.3;
		weapon.bobrangey 0.6;
		weapon.bobspeed 2.5;
		scale 0.75;
		hdweapon.barrelsize 19,0.5,1;
		tag "$TAG_GRASA";
		hdweapon.refid "grs";
		
		hdweapon.loadoutcodes "
			\cumodtype - 0-3, 1 = hacked RoF, 2 = durable bolt";
	}
	
	override double gunmass(){
		return 5+(weaponstatus[GRASA_MAG]<0)?-0.5:(weaponstatus[GRASA_MAG]*0.02);
	}
	override double weaponbulk(){
		int mg=weaponstatus[GRASA_MAG];
		if(mg<0)return 90;
		else return (90+ENC_45MAG30_LOADED)+mg*ENC_45ACP_LOADED;
	}
	
	override void loadoutconfigure(string input){
		int modType=getloadoutvar(input,"modtype",1); 
		weaponStatus[GRASA_MODTYPE] = 0;
		if (modType> 0 && modType<4) {
			weaponStatus[GRASA_MODTYPE] = modType;
		}
	}
	
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse,bool doselect){return GetSpareWeaponRegular(newowner,reverse,doselect);}
	
	override string, double GetPickupSprite() {
		return (weaponStatus[GRASA_MAG]==-1?"GRSPB0":"GRSPA0"), 1.;
	}
	
	override string pickupmessage() {
		let finalMessage = StringTable.Localize(super.pickupmessage());
		if (weaponStatus[GRASA_MODTYPE] & GRASM_DURABLE) {
			finalMessage = finalMessage.." "..StringTable.Localize("$PICKUP_GRASAQUALITY");
		} else if (weaponStatus[GRASA_MODTYPE] & GRASM_HACKEDROF) {
			finalMessage = finalMessage.." "..StringTable.Localize("$PICKUP_GRASAHACKED");
		}
		return finalMessage;
	}
	
	override void InitializeWepStats(bool idfa) {
		weaponstatus[GRASA_CHAMBER] = 2;
		weaponstatus[GRASA_MAG] = 30;
		weaponstatus[GRASA_FEEDWEAR] = 0;
		weaponstatus[GRASA_BOLTWEAR] = 0;
		if (!idfa) {weaponStatus[GRASA_MODTYPE] = 0;}
	}
	
	action void A_GrasaEjectChamber(bool ejectAll = false) {
		let wearVal = random(1, 10);
		if (invoker.weaponStatus[GRASA_MODTYPE] & GRASM_HACKEDROF) {wearVal *= 1.5;}
		if (invoker.weaponStatus[GRASA_MODTYPE] & GRASM_DURABLE) {wearVal *= 0.5;}
		invoker.weaponstatus[GRASA_BOLTWEAR] += wearVal * hd_odr_grasaboltrate;
		
		if (random(500, 9000) < invoker.weaponstatus[GRASA_BOLTWEAR]) {
			A_StartSound("weapons/grasaclosebolt",8,CHANF_OVERLAP);
			A_StartSound("weapons/rifleclick",9,CHANF_OVERLAP);
			invoker.weaponStatus[0] |= GRASF_BOLTSTUCK;
			invoker.weaponstatus[GRASA_BOLTWEAR] += random(1, 10) * hd_odr_grasaboltrate;
		} else if (invoker.weaponstatus[GRASA_CHAMBER] == 1) 
		{
			A_EjectCasing("HDSpent45ACP",
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(7,7.5),frandom(0,0.2)),
					(0,0,-2)
				);
			invoker.weaponstatus[GRASA_CHAMBER]=0;
			
		} else if (invoker.weaponstatus[GRASA_CHAMBER] == 2 && ejectAll) {
			A_EjectCasing("HDSpent45ACP",
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(7,7.5),frandom(0,0.2)),
					(0,0,-2)
				);
			invoker.weaponstatus[GRASA_CHAMBER]=0;
		}
	}
	
	action void A_CycleChamber() {
		if (invoker.weaponStatus[GRASA_MAG] < 1) {return;}
		invoker.weaponstatus[GRASA_FEEDWEAR] += random(1, 10) * hd_odr_grasafeedrate;
		if (random(500, 9000) < invoker.weaponstatus[GRASA_FEEDWEAR] 
			|| invoker.weaponStatus[0]&GRASF_MAGSTUCK) {
			A_StartSound("weapons/grasafail",9);
			invoker.weaponstatus[0] |= GRASF_MAGSTUCK;
			invoker.weaponstatus[GRASA_FEEDWEAR] += random(1, 10) * hd_odr_grasafeedrate;
		} else if (invoker.weaponstatus[GRASA_CHAMBER] == 0) {
			invoker.weaponstatus[GRASA_CHAMBER] = 2;
			invoker.weaponstatus[GRASA_MAG]--;
		}
	}
	
	action void A_LoadGrasaMag() {
		let newMag = HD45ACPMag30(FindInventory("HD45ACPMag30"));
		if (newMag) {
			invoker.weaponStatus[GRASA_MAG] = newMag.TakeMag(true);
			A_StartSound("weapons/grasaload",9);
		}
	}
	
	action void A_UnloadGrasaMag(bool keepMag) {
		let magAmount = invoker.weaponStatus[GRASA_MAG];
		invoker.weaponStatus[GRASA_MAG] = -1;
		invoker.weaponStatus[0] &= ~GRASF_MAGSTUCK;
		if (keepMag) {
			HDMagAmmo.GiveMag(self,"HD45ACPMag30",magAmount);
			A_StartSound("weapons/pocket",9);
		} else {
			HDMagAmmo.SpawnMag(self,"HD45ACPMag30",magAmount);
		}
	}
	
	action void A_SwapGrasaHands() {
		let mwt=SpareWeapons(findinventory("SpareWeapons"));
		if(!mwt){
			setweaponstate("swaphands");
			return;
		}
		int grasaindex=mwt.weapontype.find(invoker.getclassname());
		if(grasaindex==mwt.weapontype.size()){
			setweaponstate("swaphands");
			return;
		}
		A_WeaponBusy();

		array<string> wepstat;
		string wepstat2="";
		mwt.weaponstatus[grasaindex].split(wepstat,",");
		for(int i=0;i<wepstat.size();i++){
			if(i)wepstat2=wepstat2..",";
			wepstat2=wepstat2..invoker.weaponstatus[i];
			invoker.weaponstatus[i]=wepstat[i].toint();
		}
		mwt.weaponstatus[grasaindex]=wepstat2;

		invoker.wronghand=!invoker.wronghand;
	}
	
	action void A_CheckRepairState() {
		let logStr = "";
		let feed = invoker.weaponStatus[GRASA_FEEDWEAR];
		let bolt = invoker.weaponStatus[GRASA_BOLTWEAR];
		
		if (feed < 1 && bolt < 1) {
			logStr = StringTable.Localize("$GRASA_GOODCONDITION");
		}
		
		if (feed > 3000 && bolt > 3000) {
			logStr = StringTable.Localize("$GRASA_ALLBROKEN $GRASA_REPAIRING4");
			if (feed > bolt) {
				SetWeaponState("repairfeed");
			} else {
				SetWeaponState("repairbolt");
			}
		} else if (feed > bolt) {
			if (feed > 3000) {
				logStr = StringTable.Localize("$GRASA_FEEDBROKEN").." "..StringTable.Localize("$GRASA_REPAIRING3");
			} else if (feed > 2000) {
				logStr = StringTable.Localize("$GRASA_FEEDDAMAGED").." "..StringTable.Localize("$GRASA_REPAIRING2");
			} else if (feed > 1000) {
				logStr = StringTable.Localize("$GRASA_FEEDDAMAGED").." "..StringTable.Localize("$GRASA_REPAIRING1");
			} else {
				logStr = StringTable.Localize("$GRASA_GOODCONDITION").." "..StringTable.Localize("$GRASA_FEEDTWEAK");
			}
			SetWeaponState("repairfeed");
		} else {
			if (bolt > 3000) {
				logStr = StringTable.Localize("$GRASA_BOLTBROKEN").." "..StringTable.Localize("$GRASA_REPAIRING3");
			} else if (bolt > 2000) {
				logStr = StringTable.Localize("$GRASA_BOLTDAMAGED").." "..StringTable.Localize("$GRASA_REPAIRING2");
			} else if (bolt > 1000) {
				logStr = StringTable.Localize("$GRASA_BOLTDAMAGED").." "..StringTable.Localize("$GRASA_REPAIRING1");
			} else {
				logStr = StringTable.Localize("$GRASA_GOODCONDITION").." "..StringTable.Localize("$GRASA_BOLTTWEAK");
			}
			SetWeaponState("repairbolt");
		}
		A_Log(logStr);
	}
	
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("HD45ACPMag30")));
			if(nextmagloaded>=30){
				sb.drawimage("CLP3A0",(-46,-3),sb.DI_SCREEN_CENTER_BOTTOM,scale:(3,3));
			}else if(nextmagloaded<1){
				sb.drawimage("CLP3B0",(-46,-3),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.,scale:(3,3));
			}else sb.drawbar(
				"CLP3NORM","CLP3GREY",
				nextmagloaded,30,
				(-46,-3),-1,
				sb.SHADER_VERT,sb.DI_SCREEN_CENTER_BOTTOM
			);
			sb.drawnum(hpl.countinv("HD45ACPMag30"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM);
		}
		sb.drawwepnum(hdw.weaponstatus[GRASA_MAG],30);
		if(hdw.weaponstatus[GRASA_CHAMBER]==2){
			sb.drawrect(-19,-11,3,1);
		} else if (hdw.weaponstatus[GRASA_CHAMBER]==1) {
			sb.drawrect(-17,-11,1,1);
		}
	}
	
	override void ForceBasicAmmo(){
		owner.A_TakeInventory("HD45ACPAmmo");
		ForceOneBasicAmmo("HD45ACPMag30");
	}
	
	override string gethelptext(){
		return
		WEPHELP_FIRESHOOT
		..WEPHELP_ALTFIRE.."  Cocking handle\n"
		..WEPHELP_RELOAD.."  Reload mag\n"
		..WEPHELP_ALTRELOAD.."  Swap Hands\n"
		..WEPHELP_USE.."+"..WEPHELP_RELOAD.."  Reload chamber\n"
		..WEPHELP_MAGMANAGER
		..WEPHELP_UNLOADUNLOAD
		..WEPHELP_ALTFIRE.."+"..WEPHELP_UNLOAD.."  Repair Bolt/Feed\n"
		;
	}
	
	override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc
	){
		int cx,cy,cw,ch;
		[cx,cy,cw,ch]=screen.GetClipRect();
		sb.SetClipRect(
			-16+bob.x,-4+bob.y,32,16,
			sb.DI_SCREEN_CENTER
		);
		vector2 bobb=bob*3;
		bobb.y=clamp(bobb.y,-8,8);
		sb.drawimage(
			"smgfrntsit",(0,0)+bobb,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP
		);
		sb.SetClipRect(cx,cy,cw,ch);
		sb.drawimage(
			"smgrearsight",(0,-10.)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
			scale:(0.9, 0.9)
		);
	}
	
	override void failedpickupunload(){
		failedpickupunloadmag(GRASA_MAG,"HD45ACPMag30");
	}
	
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,10);
			if(owner.countinv("HD45ACPAmmo"))owner.A_DropInventory("HD45ACPAmmo",amt*30);
			else owner.A_DropInventory("HD45ACPMag30",amt);
		}
	}
	
	action void A_CheckGrasaHand(){
		if(invoker.wronghand)player.getpsprite(PSP_WEAPON).sprite=getspriteindex("GRSRA0");
	}
	
	states {
		spawn:
			GRSP AB -1 nodelay {
				if (invoker.weaponStatus[GRASA_MAG]==-1) {frame=1;}
				else {frame=0;}
			}
			stop;
		
		select0:
			GRSA A 0 {
				if(!countinv("NulledWeapon"))invoker.wronghand=false;
				A_TakeInventory("NulledWeapon");
				A_CheckGrasaHand();
			}
			#### A 0;
			goto select0small;
		deselect0:
			GRSA A 0 A_CheckGrasaHand();
			#### A 0;
			goto deselect0small;
		
		ready:
			GRSA A 0 A_CheckGrasaHand();
			#### A 1 A_WeaponReady(WRF_ALL);
			goto readyend;
		
		fire:
			---- A 0 {
				if (invoker.weaponStatus[GRASA_CHAMBER]<2) {
					A_StartSound("weapons/grasafail",CHAN_WEAPON);
				}
			}
		hold:
			#### A 1 {
				if (invoker.weaponStatus[GRASA_CHAMBER]==2) {A_GunFlash();}
			}
			---- A 0 A_Refire();
			goto ready;
		
		flash:
			TNT1 A 0{
				let recoilState = random(1, 4);
				let bbb=HDBulletActor.FireBullet(self,"HDB_45ACP",speedfactor:1.1);
				if(
					frandom(16,ceilingz-floorz)<bbb.speed*0.1
				)A_AlertMonsters();

				A_ZoomRecoil(0.995);
				A_StartSound("weapons/grasafire",CHAN_WEAPON);
				invoker.weaponstatus[GRASA_CHAMBER]=1;
				switch(recoilState){
					default:
					case 1:
						SetWeaponState("firerecoil1");
						break;
					case 2:
						SetWeaponState("firerecoil2");
						break;
					case 3:
						SetWeaponState("firerecoil3");
						break;
					case 4:
						SetWeaponState("firerecoil4");
						break;
				}
			}
			TNT1 A 1 bright{
				HDFlashAlpha(-200);
				A_Light1();
				A_GrasaEjectChamber();
				A_CycleChamber();
			}
			TNT1 A 0 {
				if (invoker.wronghand) {
					A_MuzzleClimb(frandom(0.5,1.24),-frandom(0.3,0.36),-frandom(0.2,0.24),-frandom(0.3,0.36));
				} else {
					A_MuzzleClimb(-frandom(0.5,1.24),-frandom(0.3,0.36),frandom(0.2,0.24),-frandom(0.3,0.36));
				}
			}
			goto lightdone;

		
		firerecoil1:
			#### BC 1;
			goto firerecoilend;
		firerecoil2:
			#### DE 1;
			goto firerecoilend;
		firerecoil3:
			#### FG 1;
			goto firerecoilend;
		firerecoil4:
			#### HI 1;
			goto firerecoilend;
		firerecoilend:
			#### A 3 {
				if (invoker.weaponStatus[GRASA_MODTYPE]&GRASM_HACKEDROF) {
					A_SetTics(0);
				}
			}
			---- A 0 A_ReFire();
			goto ready;
		
		altfire:
			---- A 0 A_JumpIf(invoker.weaponStatus[0]&GRASF_BOLTSTUCK, "altjam");
			---- A 0 A_StartSound("weapons/grasaopenbolt",9);
			#### J 2 A_GrasaEjectChamber(true);
			#### K 2 A_CycleChamber();
			#### J 2 A_Refire(); 
			goto ready;
		althold:
			---- A 0 A_WeaponReady(WRF_NOFIRE);
			---- A 0 A_JumpIf(PressingUnload(), "startrepair");
			---- A 1 A_JumpIf(invoker.weaponStatus[0]&GRASF_BOLTSTUCK, "altyanking");
			---- A 0 A_Refire();
			goto nope;
		noalthold:
			#### A 1;
			---- A 0 A_Refire("noalthold");
			goto nope;
		altjam:
			#### JK 2;
			#### K 8 A_StartSound("weapons/rifleclick",8,CHANF_OVERLAP);
			#### J 2;
		altyanking:
			---- J 0 A_StartSound("weapons/rifleclick",8,CHANF_OVERLAP);
			#### JK 2 {
				if (!random(0,invoker.weaponStatus[GRASA_BOLTWEAR]/500)) {
					invoker.weaponStatus[0] &= ~GRASF_BOLTSTUCK;
					SetWeaponState("altunjammed");
				}
			}
			---- J 0 A_Refire();
			goto ready;
		altunjammed:
			#### J 2 A_StartSound("weapons/grasaopenbolt",9);
			#### K 2 A_GrasaEjectChamber(true);
			#### L 2 A_CycleChamber();
			#### KJ 2;
			---- J 0 A_Refire();
			goto ready;
			
		
		unload:
			---- J 0 A_JumpIf(PressingAltfire(), "startrepair");
			---- J 0 A_JumpIf(invoker.weaponStatus[GRASA_MAG]<0, "unloadchamber");
			#### J 1 {invoker.weaponStatus[0] |= GRASF_JUSTUNLOAD;}
			goto dropmag;
		reload:
			---- J 0 A_JumpIf(PressingUse(), "loadchamber");
		dropmag:
			---- J 0 A_JumpIf(invoker.weaponStatus[GRASA_MAG]<0, "reloadnomag");
			#### JKL 2;
			---- K 0 A_JumpIf(PressingReload()||PressingUnload(), "pocketmag");
			#### MN 1;
			#### O 3;
			#### P 1;
			#### Q 2 {
				A_StartSound("weapons/grasaunload",9);
				A_UnloadGrasaMag(false);
			}
			#### RSTUVW 2;
			goto reloadmag;
		reloadnomag:
			#### L 2 offset(0,34);
			#### M 2 offset(0,42);
			#### M 2 offset(0,54);
			#### N 2 offset(0,68);
			TNT1 A 2;
			goto reloadmag;
		pocketmag:
			#### K 2 offset(0,34);
			#### L 2 offset(0,42);
			#### M 2 offset(0,54);
			#### N 2 offset(0,68);
			TNT1 A 15 A_StartSound("weapons/grasaunload",9);
			TNT1 A 8 A_UnloadGrasaMag(true);
			goto reloadmag;
		reloadmag:
			TNT1 A 0 A_JumpIf(invoker.weaponStatus[0]&GRASF_JUSTUNLOAD, "reloaddraw");
			---- A 0 A_JumpIf(HDMagAmmo.NothingLoaded(self, "HD45ACPMag30"), "reloaddraw");
			TNT1 A 6 A_StartSound("weapons/pocket",9);
			TNT1 A 6 A_LoadGrasaMag();
			TNT1 A 4 {
				if (invoker.weaponstatus[GRASA_CHAMBER]<2) {A_CycleChamber();}
			}
		reloaddraw:
			GRSA A 0 A_CheckGrasaHand();
			#### Z 0 {invoker.weaponStatus[0] &= ~GRASF_JUSTUNLOAD;}
			#### ZYX 2;
			#### Z 0 A_StartSound("weapons/grasaclosebolt",9);
			goto noalthold;
		
		loadchamber:
			#### K 2 offset(0,34);
			#### L 2 offset(0,42);
			#### M 2 offset(0,54);
			#### N 2 offset(0,68);
			TNT1 A 10 {
				A_StartSound("weapons/grasaopenbolt",9);
				A_GrasaEjectChamber(false);
			}
			TNT1 A 8 {
				if (invoker.weaponstatus[GRASA_CHAMBER] == 0 && CountInv("HD45ACPAmmo")) {
					A_StartSound("weapons/pischamber1",9);
					A_GiveInventory("HD45ACPAmmo", 1);
					invoker.weaponstatus[GRASA_CHAMBER] = 2;
				}
			}
			goto reloaddraw;
			
		unloadchamber:
			#### K 2 offset(0,34);
			#### L 2 offset(0,42);
			#### M 2 offset(0,54);
			#### N 2 offset(0,68);
			TNT1 A 10 A_StartSound("weapons/grasaopenbolt",9);
			TNT1 A 8 {
				if (invoker.weaponstatus[GRASA_CHAMBER] == 2) {
					A_StartSound("weapons/pocket",9);
					A_GiveInventory("HD45ACPAmmo", 1);
					invoker.weaponstatus[GRASA_CHAMBER] = 0;
				}
			}
			goto reloaddraw;
			
		startrepair:
			#### J 2;
			#### K 2 offset(0,34);
			#### L 2 offset(0,42);
			#### M 2 offset(0,54);
			#### N 2 offset(0,68);
			---- N 1 {
				if (invoker.weaponStatus[GRASA_MAG]>0 && invoker.weaponStatus[GRASA_CHAMBER]>0){
					A_Log(StringTable.Localize("$GRASA_UNLOAD"));
					SetWeaponState("reloaddraw");
				}
				A_CheckRepairState();
			}
			goto reloaddraw;
		repairbolt:
			TNT1 A 16 {
				if (invoker.weaponStatus[GRASA_BOLTWEAR] < random(0, 100)
						|| !PressingAltfire()
						|| !PressingUnload()) {
					if (invoker.weaponStatus[GRASA_BOLTWEAR] > 1500) {
						A_Log(StringTable.Localize("$GRASA_BOLTSTOPBAD"));
					} else if (invoker.weaponStatus[GRASA_BOLTWEAR] > 500) {
						A_Log(StringTable.Localize("$GRASA_BOLTSTOP"));
					} else {
						A_Log(StringTable.Localize("$GRASA_BOLTFINISHED"));
					}
					SetWeaponState("reloaddraw");
				}
				A_StartSound("weapons/pocket",9);
				invoker.weaponStatus[GRASA_BOLTWEAR] -= random(50,100) * hd_odr_grasarepairrate;
			}
			loop;
		repairfeed:
			TNT1 A 16 {
				if (invoker.weaponStatus[GRASA_FEEDWEAR] < random(0, 100)
						|| !PressingAltfire()
						|| !PressingUnload()) {
					if (invoker.weaponStatus[GRASA_FEEDWEAR] > 1500) {
						A_Log(StringTable.Localize("$GRASA_FEEDSTOPBAD"));
					} else if (invoker.weaponStatus[GRASA_FEEDWEAR] > 500) {
						A_Log(StringTable.Localize("$GRASA_FEEDSTOP"));
					} else {
						A_Log(StringTable.Localize("$GRASA_FEEDFINISHED"));
					}
					SetWeaponState("reloaddraw");
				}
				A_StartSound("weapons/pocket",9);
				invoker.weaponStatus[GRASA_FEEDWEAR] -= random(50,100) * hd_odr_grasarepairrate;
			}
			loop;
			
			
		user1:
		altreload:
		swap:
			---- A 0 A_SwapGrasaHands();
			---- A 0 {
				if(invoker.wronghand){
					A_Overlay(1025,"rightin");
					A_Overlay(1026,"leftout");
				}else{
					A_Overlay(1025,"leftin");
					A_Overlay(1026,"rightout");
				}
			}
			TNT1 A 6;
			GRSA A 0 A_CheckGrasaHand();
			goto ready;
			
		leftin:
			GRSA ZYX 2;
			stop;
		leftout:
			GRSA XYZ 2;
			stop;
		rightin:
			GRSR ZYX 2;
			stop;
		rightout:
			GRSR XYZ 2;
			stop;
		
		swaphands:
			#### XYZ 2;
			GRSA Z 0 {
				invoker.wronghand=!invoker.wronghand;
				A_CheckGrasaHand();
			}
			#### ZYX 2;
			goto nope;
	}
}

enum GrasaStats {
	GRASF_JUSTUNLOAD = 1,
	GRASF_MAGSTUCK = 2,
	GRASF_BOLTSTUCK = 4,
	
	GRASM_HACKEDROF = 1,
	GRASM_DURABLE = 2,

	GRASA_MAG = 1,
	GRASA_CHAMBER = 2,
	GRASA_MODTYPE = 3,
	GRASA_FEEDWEAR = 4,
	GRASA_BOLTWEAR = 5,
}

class HDGrasaSpawner : IdleDummy {
	states {
		spawn:
			TNT1 A 0 nodelay {
				let wpn = HDGrasa(Spawn("HDGrasa", pos, ALLOW_REPLACE));
				HDF.TransferSpecials(self,wpn,HDF.TS_ALL);
				wpn.vel = vel;
				wpn.weaponStatus[GRASA_MODTYPE] = 0;
				if (random(0, 99) < hd_odr_grasahackchance) { 
					wpn.weaponStatus[GRASA_MODTYPE] |= GRASM_HACKEDROF; 
				}
				if (random(0, 99) < hd_odr_grasaqualitychance) { 
					wpn.weaponStatus[GRASA_MODTYPE] |= GRASM_DURABLE; 
				}
				A_SpawnItemEx("HD45ACPMag30",-8,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
				A_SpawnItemEx("HD45ACPMag30",8,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
			}
			stop;
	}
}